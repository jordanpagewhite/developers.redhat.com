<?php

/**
 * @file
 * 
 * Katacoda-specific functionality.
 */
use Drupal\Core\StringTranslation\TranslatableMarkup;
use Drupal\node\NodeInterface;
use Drupal\taxonomy\Entity\Term;

include_once 'rhd_katacoda.tokens.inc';

/**
 * Implements template_preprocess_node().
 */
function rhd_katacoda_preprocess_node(array &$variables) {
  $variables['node'] = $variables['elements']['#node'];
  $node = $variables['node'];

  // Katacoda Course Page â€“ Additional Field Display
  //
  // Adds the body/description content of an entity reference to the lesson
  // display list individual content cards.
  if ($node->getType() == 'katacoda_course') {
    // We will use this variable to add up the entire time of a course.
    $course_time = 0;
    $audiences = $node->field_katacoda_course_audience->getValue();
    $audience_names = [];
    $num_lessons = 0;

    foreach ($audiences as $audience) {
      $audience_names[] = Term::load($audience['target_id'])->getName();
    }

    if (!$node->field_katacoda_course_lessons->isEmpty()) {
      // Retrieve the IDs of the included Katacoda Courses to display information and links.
      $lessons = $node->field_katacoda_course_lessons->getValue();
      $lesson_ids = [];

      foreach($lessons as $lesson) {
        $lesson_ids[] = $lesson['target_id'];
      }

      // Retrieve Lesson IDs.
      $lesson_entity = \Drupal::entityTypeManager()
        ->getStorage('node')
        ->loadMultiple($lesson_ids);

      // Gather information for each lesson node.
      foreach($lesson_entity as $k=>$v) {
        // Add each scenario_time to the total course_time.
        $course_time += (int) $v->field_katacoda_scenario_time->value;
        // Keep track of the number of lessons in a course.
        $num_lessons += 1;
      }
    }

    // Set the Katacoda Course, Card view mode subtitle.
    if ($num_lessons > 1) {
      $subtitle = $num_lessons . ' lessons | ' . $course_time . ' minutes';
    }
    else {
      $subtitle = $num_lessons . ' lesson | ' . $course_time . ' minutes';
    }

    // Variables passed to Katacoda Course templates.
    $variables['katacoda_course_info']['audiences'] = $audience_names;
    $variables['katacoda_course_info']['course_time'] = $course_time;
    $variables['katacoda_course_info']['num_lessons'] = $num_lessons;
    $variables['katacoda_course_info']['subtitle'] = $subtitle;
  }
}

/**
 * Implements hook_preprocess_breadcrumb().
 * 
 * Removes the "Home" link from the Breadcrumb path for Katacoda Individual
 * Lessons and Katacoda Course nodes.
 */
function rhd_katacoda_preprocess_breadcrumb(&$variables){
  // Check node type.
  $node = \Drupal::request()->attributes->get('node');
  $types = ['katacoda_course','katacoda_individual_lesson'];

  // If we have a Node object...
  if ($node instanceof NodeInterface) {
    $node_type = $node->getType();
    // If our $node_type is one of the types declared in $types...
    if (in_array($node_type,$types) === TRUE) {
      // If we have a non-empty array of breadcrumbs...
      if (count($variables['breadcrumb'])) {
        // Remove 'Home' (1st member) from breadcrumb trail.
        array_shift($variables['breadcrumb']);
        // Append the current page title to the end of the breadcrumb trail.
        $variables['breadcrumb'][] = [
          'text' => new TranslatableMarkup("@nodetitle", [
            '@nodetitle' => $node->getTitle(),
          ])
        ];
      }
    }
  }
}
